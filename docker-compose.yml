version: '3.11'

services:
  lil_bro_app:
    container_name: lil_bro_app
    build:
      context: .
    command: |
      bash -c "python manage.py collectstatic --noinput &&
               python manage.py migrate &&
               gunicorn -c config/gunicorn_config.py config.wsgi:application"
    tty: false
    volumes:
      - static_volume:/lil_bro/static
      - media_volume:/lil_bro/media
      - etc-letsencrypt:/etc/letsencrypt:rw
      - /lil_bro:/lil_bro
    restart: on-failure
    env_file:
      - .env
    depends_on: [lil_bro_db, redis, celery, beat]

  lil_bro_db:
    container_name: lil_bro_db
    image: postgres:15.3-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - lil_bro_db:/var/lib/postgresql/data

  celery:
    container_name: celery-worker
    build:
      context: .
    restart: on-failure
    depends_on: [redis]
    command: sh -c "celery -A config worker -l info -S django"

  beat:
    container_name: celery-beat
    build:
      context: .
    restart: on-failure
    depends_on: [celery]
    command: sh -c "celery -A config beat -l info -S django"

  redis:
    container_name: redis
    image: redis:6.0.16-alpine
    hostname: redis

  nginx:
    build:
      dockerfile: ./docker/nginx/Dockerfile
      context: .
    container_name: lil_bro_nginx
    volumes:
      - /lil_bro:/lil_bro
      - static_volume:/lil_bro/static:ro
      - media_volume:/lil_bro/media:ro
      - etc-letsencrypt:/etc/letsencrypt:ro
    depends_on: [lil_bro_app]
    ports:
      - '${NGINX_EXTERNAL_PORT}:80'
      - '443:443'
    restart: on-failure

volumes:
  etc-letsencrypt:
  static_volume:
  media_volume:
  lil_bro_db:
    driver: local
