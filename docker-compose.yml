version: '3.11'

services:
  lil_bro_app:
    container_name: lil_bro_app
    build:
      context: .
    command: bash -c "python manage.py collectstatic --noinput && python manage.py migrate && gunicorn --bind 0.0.0.0:8000 config.wsgi:application"
    tty: false
    volumes:
      - static_volume:/lil_bro/static
      - media_volume:/lil_bro/media
      - .:/lil_bro
    restart: on-failure
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on: [lil_bro_db, redis, celery, beat]

  lil_bro_db:
    container_name: lil_bro_db

    image: postgres:15.3-alpine

    environment:
      POSTGRES_DB: ${db_name}
      POSTGRES_USER: ${db_user}
      POSTGRES_PASSWORD: ${db_pass}

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

    volumes:
      - postgres_data_lil_bro:/var/lib/postgresql/data

  celery:
    container_name: celery-worker

    build:
      context: .
    restart: on-failure
    command: sh -c "celery -A config worker -l info -S django"

  beat:
    container_name: celery-beat
    build:
      context: .
    restart: on-failure
    command: sh -c "celery -A config beat -l info -S django"

  redis:
    container_name: redis
    image: redis:6.0.16-alpine
    hostname: redis

  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./docker/nginx/
    container_name: lil_bro_nginx
    image: lil_bro_nginx
    volumes:
      - static_volume:/lil_bro/static
      - media_volume:/lil_bro/media
    depends_on: [ lil_bro_app]
    ports:
      - "${NGINX_EXTERNAL_PORT}:80"

volumes:
  static_volume:
  media_volume:
  postgres_data_lil_bro:
  lil_bro:
  lil_bro_bd:
    driver: local